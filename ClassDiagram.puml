@startuml LoginClassDiagram
!define ACTIVATE_ENTITY Repository <<Database>> #008000
skinparam Style strictuml

actor User
activate DashboardUserView
activate DashboardUserController
activate userService
'activate Exception
activate Dto
database Repository as ACTIVATE_ENTITY

User -> DashboardUserView : Click in " User"
DashboardUserView -> DashboardUserController : send request viewUser()
DashboardUserController -> userService : Do getUserByUserId()
'userService -> Exception : Check Validate()
'Exception --> FolderView : Validation Failed
'FolderView --> User :  Display info folder false
'Exception --> FolderService : Validation Success
userService -> Repository : send request getUserByUserId()
Repository --> Dto : Convert User Data to dto
Dto --> userService : Send Data
userService --> DashboardUserController: Send Data
DashboardUserController --> DashboardUserView : Send Data
DashboardUserView --> User  : Display Data
'alt Account Already Exists
'    UserRepository --> UserService : Account Already Exists
'    UserService --> RegisterView : Display Account Already Exists
'    RegisterView --> User : Display Account Already Exists
'else Register Success
'    UserRepository --> UserService : Register Success
'    UserService --> AppController : Send Register Success
'    AppController --> User : Display Register Success
'end

@enduml