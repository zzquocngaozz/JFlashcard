@startuml

class ClassRoomController {
    + listMembers(myUserDetail: MyUserDetail, classId: long): List<AuthDTO>
}

class ClassRoomService {
    + getAllClassMembersByClassRoom(classRoomId: long): List<AuthDTO>
}

interface ClassRoomRepository {
    + getClassRoomByClassRoomId(classRoomId: long): ClassRoom
}

interface ClassMemberRepository {
    + getAllByClassroom(classRoom: ClassRoom): List<ClassMember>
}

class ClassRoom {
    // ClassRoom attributes and methods here
}

class ClassMember {
    // ClassMember attributes and methods here
}

class MyUserDetail {
    // MyUserDetail attributes and methods here
}

class AuthDTO {
    // AuthDTO attributes and methods here
}

class UserMapper {
    + toAuthDTO(user: User): AuthDTO
}

ClassRoomController --> ClassRoomService
ClassRoomController --> MyUserDetail
ClassRoomService --> ClassRoomRepository
ClassRoomService --> ClassMemberRepository
ClassRoomService --> ClassMember
ClassRoomRepository --> ClassRoom
ClassMemberRepository --> ClassRoom
ClassMember --> UserMapper
UserMapper--> AuthDTO

@enduml
