@startuml

class CardGrammarController {
  +createGrammarCard(myUserDetail: MyUserDetail, grammarDTO: GrammarDTO): ResponseEntity<?>
}

class FlashcardSetService {
  +createFlashcardGrammar(grammarDTO: GrammarDTO, user: User): void
}

class MyUserDetail

class GrammarDTO {
  -term: String
  -mean: String
  // other attributes...
}

class User {
  // attributes...
}

class Validate {
  +validateTerm(term: String): void
  +validateMean(mean: String): void
}

class FlashcardMapper {
  +convertToFlashcardGrammarEntity(grammarDTO: GrammarDTO, user: User): FlashcardGrammar
}

interface FlashcardGrammarRepository {
  +save(flashcardGrammar: FlashcardGrammar): FlashcardGrammar
}

class FlashcardGrammar {
  // attributes...
}

CardGrammarController -- FlashcardSetService : uses
FlashcardSetService -- Validate : uses
FlashcardSetService -- FlashcardMapper : uses
FlashcardSetService -- FlashcardGrammarRepository : uses
MyUserDetail -- User : uses
FlashcardGrammarRepository -- FlashcardGrammar : uses
CardGrammarController -- MyUserDetail : uses
CardGrammarController -- ResponseEntity : returns
FlashcardMapper -- GrammarDTO : uses

@enduml
